@model Behsaz.Service.DTOs.Citizen.Urban.Inspection.InspectDayRDTO
@using Behsaz.Utilities.Enums.Citizen;

@if (Model.StateId == (int)eInspectOfferresult.InspectOfferAlreadyAdded)
{
    <div class="alert alert-success">@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.AlertInInspectOfferAlreadyAdded</div>
}
else if (Model.StateId == (int)eInspectOfferresult.UnKnown)
{
    <div class="alert alert-warning">@Behsaz.Web.Citizen.Content.Resources.Messages.UnKnownErrorThrown</div>
}
else if (Model.StateId == (int)eInspectOfferresult.EmptyInput)
{
    <div class="alert alert-warning">@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.EmptyRequestNumber</div>
}
else if (Model.StateId == (int)eInspectOfferresult.InspectOfferDateNotExist)
{
    <div class="alert alert-danger">@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.AlertInInspectOfferDateNotExist</div>
}
else if (Model.StateId == (int)eInspectOfferresult.CashDocNotCashed)
{
    <div class="alert alert-warning">@Behsaz.Web.Citizen.Content.Resources.Payment.Messages.CashDocNotCashed</div>
}

else if (Model.StateId == (int)eInspectOfferresult.RequestIsNotActive)
{
<div class="alert alert-warning">@Behsaz.Utilities.Resources.Citizen.Urban.Messages.RequestIsNotActive</div>
}
else
{
<div class="row">
    <div class="col-md-12">
        <div class="">
            <div class="alert alert-warning col-md-12"><span>@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.InfoForInspectDate</span></div>
            <input id="inlineDatePickerAlt" class="datepicker-demo" style="display:none" />
            <div class="inline-DatePicker"></div>
        </div>
    </div>
</div>

<div class="form-group bmd-form-group pull-left">
    <button id="btn_OfferInspect" onclick="OfferInspect('@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.FirstlyChooseOneDate','@Behsaz.Web.Citizen.Content.Resources.Urban.Messages.DateOverLimit')" type="submit" class="btn btn-primary ">@Behsaz.Web.Citizen.Content.Resources.Buttons.Confirm<div class="ripple-container"></div></button>
</div>
}

<script>
    function CheckDateList(unix) {
        var state = true;
        var dateIn = new persianDate(unix).toArray();
        var date = new persianDate([dateIn[0], dateIn[1], dateIn[2]]);
        var list = [new persianDate()];
        @foreach (var item in Model.DateOffList)
        {
            @:list.push(new persianDate([@item.Year, @item.Month, @item.Day]));
        }
        for (i = 0; i < list.length; i++) {
            if (state == true) {
                var dif = list[i].diff(date);
                state = (dif != 0);
            }
        }
        return state;
    }

    function GetDaysAllowedCount() {
        var daysAllowedCount = @ViewBag.DaysAllowedCount;
        return daysAllowedCount;
    }
</script>



