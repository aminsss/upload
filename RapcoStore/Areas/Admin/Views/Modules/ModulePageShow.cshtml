@model IEnumerable<Koshop.DomainClasses.MenuGroup>

@foreach (var Menugroup in Model)
{
    <div class="col-md-3">
        <br />
        <label class="label-info">@Menugroup.MenuTitile</label>
        <br />
        @ShowTree(Menugroup.Menu.Where(s => s.Depth == 0 && s.MenuGroupId == Menugroup.MenuGroupId).OrderBy(x => x.DisplayOrder), ViewBag.moduleId)
    </div>
}


@helper ShowTree(IEnumerable<Koshop.DomainClasses.Menu> Menutree, int? moduleid)
    {
        Koshop.DataLayer.AppDbContext db = new Koshop.DataLayer.AppDbContext();
        foreach (var item in Menutree)
        {
            <div class="col-md-12">
                @if (db.ModulePages.Any(x => x.MenuId == item.MenuId && x.ModuleId == moduleid))
                {
                    <div><input class="form-control" id="Page[@item.MenuId]" name="Page[@item.MenuId]" type="checkbox" checked="checked" /> @string.Concat(Enumerable.Repeat(" ┊ ", Convert.ToInt32(item.Depth))) @Html.DisplayFor(modelitem => item.MenuTitle)</div>
                }
                else
                {
                    <div><input class="form-control" id="Page[@item.MenuId]" name="Page[@item.MenuId]" type="checkbox" />  @string.Concat(Enumerable.Repeat(" ┊ ", Convert.ToInt32(item.Depth))) @Html.DisplayFor(modelitem => item.MenuTitle)</div>
                }
            </div>
            if (db.Menus.Any(s => s.ParentId == item.MenuId ))
            {
                @ShowTree(db.Menus.Where(s => s.ParentId == item.MenuId ).OrderBy(x => x.DisplayOrder), moduleid);
            }
        }
}